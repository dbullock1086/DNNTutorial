#!/usr/bin/env python

import os

# load all scripts necessary for an Event Loop job
from eventloop.Driver     import *
from eventloop.EventStore import *
from pyobjects.LorentzDef import *
from elalgs.HadronicPT    import *
from elalgs.Hemispheres   import *
from elalgs.InvMass       import *
from elalgs.CTMass        import *
from elalgs.Sphericity    import *
from elalgs.TreeFill      import *

# set up the event driver
# including the input and output
driver = Driver ('makehists')
driver.Input (os.getenv('SampleDir') + '/mP1000_mC150_mX100.h5', 'AA_Gen')
driver.Output (os.getenv('HistDir') + '/treefill.root')

#### start feeding algorithms into the driver

# define an eventstore to hold the input data
estore = EventStore ('estore')

# four vectors:
B1 = LorentzDef ('B1',
                 ['B1_pT', 'B1_eta', 'B1_phi', 'B1_M'],
                 mode='ptetaphim')
estore.AddVar (B1)

B2 = LorentzDef ('B2',
                 ['B2_pT', 'B2_eta', 'B2_phi', 'B2_M'],
                 mode='ptetaphim')
estore.AddVar (B2)

L1 = LorentzDef ('L1',
                 ['L1_pT', 'L1_eta', 'L1_phi', 'L1_M'],
                 mode='ptetaphim')
estore.AddVar (L1)

L2 = LorentzDef ('L2',
                 ['L2_pT', 'L2_eta', 'L2_phi', 'L2_M'],
                 mode='ptetaphim')
estore.AddVar (L2)

# three-vectors
B1vec = LorentzDef ('B1vec',
                    ['B1_pT', 'B1_eta', 'B1_phi'],
                    mode='ptetaphi')
estore.AddVar (B1vec)

B2vec = LorentzDef ('B2vec',
                    ['B2_pT', 'B2_eta', 'B2_phi'],
                    mode='ptetaphi')
estore.AddVar (B2vec)

L1vec = LorentzDef ('L1vec',
                    ['L1_pT', 'L1_eta', 'L1_phi'],
                    mode='ptetaphi')
estore.AddVar (L1vec)

L2vec = LorentzDef ('L2vec',
                    ['L2_pT', 'L2_eta', 'L2_phi'],
                    mode='ptetaphi')
estore.AddVar (L2vec)

driver.Alg (estore)

# calculate some new observables

HT = HadronicPT ('HT')
HT.AddJet ('B1')
HT.AddJet ('B2')
driver.Alg (HT)

Hemi = Hemispheres ('Hemi') # note this name
Hemi.AddJet ('B1')
Hemi.AddJet ('B2')
Hemi.AddJet ('L1')
Hemi.AddJet ('L2')
driver.Alg (Hemi)

Mjj = InvMass ('Mjj', 'Hemi_1', 'Hemi_2') # note the prefix
driver.Alg (Mjj)

MCT = InvMass ('MCT', 'Hemi_1', 'Hemi_2')
driver.Alg (MCT)

Sphere = Sphericity ('Sphere')
Sphere.AddJet ('B1vec')
Sphere.AddJet ('B2vec')
Sphere.AddJet ('L1vec')
Sphere.AddJet ('L2vec')
driver.Alg (Sphere)

# fill a tree with values
t = TreeFill ('tree')
t.AddBranch ('HT')
t.AddBranch ('Mjj')
t.AddBranch ('MCT')
t.AddBranch ('Sphere_S')
t.AddBranch ('Sphere_ST')
t.AddBranch ('Sphere_A')
driver.Alg (t)

# run the job
driver.Submit ()
